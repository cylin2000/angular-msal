{"version":3,"sources":["./src/app/public/public.component.ts","./src/app/public/public.component.html","./src/app/msal.guard.ts","./src/environments/environment.ts","./src/app/private/private.component.ts","./src/app/private/private.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-public',\r\n  templateUrl: './public.component.html',\r\n  styleUrls: ['./public.component.scss']\r\n})\r\nexport class PublicComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <p>The 'public' component is accessible whether or not you are logged as it does not have a route guard.</p>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MsalGuard implements CanActivate {\r\n\r\n  constructor(private _msalService: MsalService) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      return this._msalService.instance.getActiveAccount() ? true : false;\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Component({\r\n  selector: 'app-private',\r\n  templateUrl: './private.component.html',\r\n  styleUrls: ['./private.component.scss']\r\n})\r\nexport class PrivateComponent implements OnInit {\r\n\r\n  constructor(private _msalService: MsalService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getUsername(): string {\r\n    return this._msalService.instance.getActiveAccount().name;\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <p>Greetings, {{ getUsername() }}!</p>\r\n</div>","<div class=\"container\">\r\n  <nav>\r\n    <ul>\r\n      <li><a [routerLink]=\"['/public']\" routerLinkActive=\"true\">Public</a></li>\r\n      <li>\r\n        <a\r\n          [routerLink]=\"['/private']\"\r\n          routerLinkActive=\"true\"\r\n          *ngIf=\"isLoggedIn()\"\r\n          >Private</a\r\n        >\r\n      </li>\r\n      <li>\r\n        <a href=\"https://borderliner.github.io/Meshki/\" target=\"_blank\">Meshki</a>\r\n      </li>\r\n      <li *ngIf=\"isLoggedIn()\" class=\"float-right\"><a (click)=\"logout()\">Logout</a></li>\r\n      <li *ngIf=\"!isLoggedIn()\" class=\"float-right\"><a (click)=\"login()\">Login</a></li>\r\n    </ul>\r\n  </nav>\r\n\r\n  <div class=\"content\">\r\n    <div *ngIf=\"isLoggedIn()\">\r\n      <h3>You are logged in.</h3>\r\n    </div>\r\n    <div *ngIf=\"!isLoggedIn()\">\r\n      <h3>You are not logged in.</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { AuthenticationResult } from '@azure/msal-common';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'MSAL Authentication Example';\r\n\r\n  constructor(private _authService: MsalService) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this._authService.instance.handleRedirectPromise().then( res => {\r\n      if (res != null && res.account != null) {\r\n        this._authService.instance.setActiveAccount(res.account)\r\n      }\r\n    })\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this._authService.instance.getActiveAccount() != null\r\n  }\r\n\r\n  login() {\r\n    // redirect login \r\n    this._authService.loginRedirect();\r\n\r\n    // popup login\r\n    // this._authService.loginPopup()\r\n    //   .subscribe((response: AuthenticationResult) => {\r\n    //     this._authService.instance.setActiveAccount(response.account);\r\n    //   });\r\n  }\r\n\r\n  logout() {\r\n    this._authService.logout()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MsalModule, MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\r\nimport { IPublicClientApplication, PublicClientApplication } from '@azure/msal-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PublicComponent } from './public/public.component';\r\nimport { PrivateComponent } from './private/private.component';\r\n\r\nexport function MsalInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication({\r\n    auth: {\r\n      clientId: 'fe71d466-76fc-4ac5-96e2-d6abf5ea2436', // This is your client ID\r\n      redirectUri: 'https://brave-sky-0ff4c5d10.1.azurestaticapps.net/',// This is your redirect URI\r\n      authority: \"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47\"\r\n      //navigateToLoginRequestUrl:true \r\n    }\r\n  })\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PublicComponent,\r\n    PrivateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MsalModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MsalInstanceFactory\r\n    },\r\n    MsalService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MsalGuard } from './msal.guard';\r\nimport { PrivateComponent } from './private/private.component';\r\nimport { PublicComponent } from './public/public.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'public', component: PublicComponent },\r\n  { path: 'private', component: PrivateComponent, canActivate: [MsalGuard] },\r\n  { path: '**', component: PublicComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}